version: "3.9"

services:
  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: flaskapp
      MYSQL_USER: USER
      MYSQL_PASSWORD: 1234
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "yes"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - backend

  flask:
    image: localhost:5000/flask_blog_app:latest  # Use the image from your local registry or private repository
    environment:
      FLASK_ENV: production
      DATABASE_URI: mysql+pymysql://USER:1234@mariadb/flaskapp
    deploy:
      replicas: 1  # Adjust according to your scaling needs
    volumes:
      - type: bind
        source: .
        target: /app
    ports:
      - "5000:5000"
    depends_on:
      - mariadb
    networks:
      - backend

  nginx:
    image: localhost:5000/flask_blog_nginx:latest  # Use the image from your local registry or private repository
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/dopy.jumpingcrab.com/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/dopy.jumpingcrab.com/privkey.pem:/etc/nginx/ssl/privkey.pem
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/nginx/ssl/options-ssl-nginx.conf
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/nginx/ssl/ssl-dhparams.pem
    depends_on:
      - flask
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: overlay  # Use overlay network for communication between services
  backend:
    driver: overlay  # Use overlay network for communication between services

volumes:
  mariadb_data:
    driver: local  # Use local volume driver for persistent storage

